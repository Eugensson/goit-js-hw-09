{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBAEvCF,EAAKM,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAeC,OAAOP,EAAWQ,OACjCC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAElCG,YAAW,KACT,IAAIC,EAAQN,EACRO,EAAW,EAEf,MAAMC,EAAUC,aAAY,KAC1BC,EAAcH,EAAUD,GACrBK,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,EAAAzB,GAAS0B,OAAOC,QACd,qBAAqBJ,QAAeC,MACrC,IAEFI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBC,EAAAzB,GAAS0B,OAAOG,QAAQ,oBAAoBN,QAAeC,MAAU,IAGzEP,GAASH,EACTI,GAAY,EAERA,GAAYH,EAAS,GACvBe,cAAcX,EAAQ,GAEvBL,EAAK,GACPH,E,IAGL,MAAMU,EAAgB,CAACE,EAAUC,IACxB,IAAIO,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAET,E,MAAUC,IAEpBS,EAAO,C,SAAEV,E,MAAUC,GAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const delayDefault = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  setTimeout(() => {\n    let delay = delayDefault;\n    let position = 1;\n\n    const timerId = setInterval(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delay += step;\n      position += 1;\n\n      if (position == amount + 1) {\n        clearInterval(timerId);\n      }\n    }, step);\n  }, delayDefault);\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((Fulfill, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Fulfill({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","e","preventDefault","delayDefault","Number","value","step","amount","setTimeout","delay1","position1","timerId","setInterval","$47d4ff9957288465$var$createPromise","then","position","delay","$parcel$interopDefault","Notify","success","catch","failure","clearInterval","Promise","Fulfill","reject","Math","random"],"version":3,"file":"03-promises.101b23ea.js.map"}